
       - name: TC configuration allowing ARP and IP between VFs in pairs using encap/decap rules
         shell: "sudo tc filter add dev {{ node1_vf1_repr.stdout }} parent ffff: protocol arp flower action action tunnel_key set id 16 src_ip 2.2.2.1 dst_ip 2.2.2.2 dst_port 4789 action mirred egress redirect dev vxlan16;
                 sudo tc filter add dev {{ node1_vf1_repr.stdout }} parent ffff: protocol ip flower action action tunnel_key set id 16 src_ip 2.2.2.1 dst_ip 2.2.2.2 dst_port 4789 action mirred egress redirect dev vxlan16;
                 sudo tc filter add dev vxlan16 protocol arp parent ffff: prio 1 flower enc_dst_ip 2.2.2.1 enc_src_ip 2.2.2.2 enc_dst_port 4789 enc_key_id 16 action tunnel_key unset action mirred egress redirect dev {{ node1_vf1_repr.stdout }};
                 sudo tc filter add dev vxlan16 protocol ip parent ffff: prio 2 flower enc_dst_ip 2.2.2.1 enc_src_ip 2.2.2.2 enc_dst_port 4789 enc_key_id 16 action tunnel_key unset action mirred egress redirect dev {{ node1_vf1_repr.stdout }};"
         when: inventory_hostname in groups['group1']

       - name: TC configuration allowing ARP and IP between VFs in pairs
         shell: "sudo tc filter add dev {{ node2_vf1_repr.stdout }} parent ffff: protocol arp flower action action tunnel_key set id 16 src_ip 2.2.2.2 dst_ip 2.2.2.1 dst_port 4789 action mirred egress redirect dev vxlan16;
                 sudo tc filter add dev {{ node2_vf1_repr.stdout }} parent ffff: protocol ip flower action action tunnel_key set id 16 src_ip 2.2.2.2 dst_ip 2.2.2.1 dst_port 4789 action mirred egress redirect dev vxlan16;
                 sudo tc filter add dev vxlan16 protocol arp parent ffff: prio 1 flower enc_dst_ip 2.2.2.2 enc_src_ip 2.2.2.1 enc_dst_port 4789 enc_key_id 16 action tunnel_key unset action mirred egress redirect dev {{ node2_vf1_repr.stdout }};
                 sudo tc filter add dev vxlan16 protocol ip parent ffff: prio 2 flower enc_dst_ip 2.2.2.2 enc_src_ip 2.2.2.1 enc_dst_port 4789 enc_key_id 16 action tunnel_key unset action mirred egress redirect dev {{ node2_vf1_repr.stdout }};"
         when: inventory_hostname in groups['group2']

       - name: run ping within first VFs pair
         shell: sudo bash -c "ip netns exec test_ns1 ping -c10 {{ second_port_addr}}"
         when: inventory_hostname in groups['group1']

       - name: Get TC stats with hardware redirecting the packets
         shell: "sleep 2; sudo tc -stats filter show dev {{ node1_vf1_repr.stdout }} parent ffff: | grep -A20 ipv4 | grep Sent | grep hardware | awk ' { print $5 }'"
         register: VF_hardware_redirected
         when: inventory_hostname in groups['group1']

       - fail: msg="TC stats are NOT as expected. HW redirecting {{ VF_hardware_redirected.stdout }} instead of 10"
         when: inventory_hostname in groups['group1'] and VF_hardware_redirected.stdout != "10"

       - name: Checking TC stats are as expected
         debug:
                 msg: OK
         when: inventory_hostname in groups['group1'] and VF_hardware_redirected.stdout == "10"
